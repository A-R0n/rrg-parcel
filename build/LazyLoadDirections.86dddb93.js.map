{"version":3,"sources":["../src/components/Directions/Directions.js","../src/components/Directions/LazyLoadDirections.js"],"names":["Directions","fields","React","useState","isSelected","setIsSelected","response","setResponse","directionsCallback","useCallback","status","console","log","useEffect","geoCords","length","destination","origin","lat","lng","travelMode","ds","directions"],"mappings":";AAGO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAHP,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,0BAEO,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,IAAMA,EAAa,SAACC,GACWC,IADA,EAAA,EACAA,EAAMC,QAAAA,UAAS,GADf,GAC7BC,EAD6B,EAAA,GACjBC,EADiB,EAAA,GAAA,EAAA,EAEJH,EAAMC,QAAAA,SAAS,MAFX,GAE7BG,EAF6B,EAAA,GAEnBC,EAFmB,EAAA,GAI9BC,EAAqBN,EAAMO,QAAAA,YAAY,SAACH,GAC3B,OAAbA,IACsB,OAApBA,EAASI,OACXH,EAAYD,GAEZK,QAAQC,IAAI,aAAcN,KAG7B,IAEGO,EAAAA,QAAAA,UAAU,WACdR,GAAc,GACdE,EAAY,OACX,CAACN,EAAOa,WAQT,OAAA,EACGV,QAAAA,cAAAA,MAAAA,KAAAA,GAAcH,EAAOa,SAASC,OAAS,GAAkB,OAAbT,GAC3C,EAAC,QAAA,cAAA,EAAD,kBAAA,CACE,QAAS,CACPU,YAAaf,EAAOa,SAAS,GAAK,IAAMb,EAAOa,SAAS,GACxDG,OAXM,CACdC,IAAK,QACLC,KAAM,SAUEC,WAAY,WAEd,SAAUZ,EAEV,UAAW,SAACa,GACVV,QAAQC,IAAI,8BAA+BS,GAC3ChB,GAAc,MAIN,OAAbC,GACC,EAAC,QAAA,cAAA,EAAD,mBAAA,CAAoB,QAAS,CAAEgB,WAAYhB,OA1C5C,QAAA,WAAA;;ACHP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,cAAA,IAAA,EAAA,QAAA","file":"LazyLoadDirections.86dddb93.js","sourceRoot":"../public","sourcesContent":["import React from \"react\";\nimport { DirectionsService, DirectionsRenderer } from \"@react-google-maps/api\";\n\nexport const Directions = (fields) => {\n  const [isSelected, setIsSelected] = React.useState(false);\n  const [response, setResponse] = React.useState(null);\n\n  const directionsCallback = React.useCallback((response) => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        setResponse(response);\n      } else {\n        console.log(\"response: \", response);\n      }\n    }\n  }, []);\n\n  React.useEffect(() => {\n    setIsSelected(true);\n    setResponse(null);\n  }, [fields.geoCords]);\n\n  const miguels = {\n    lat: 37.7831,\n    lng: -83.6828,\n  };\n\n  return (\n    <div>\n      {isSelected && fields.geoCords.length > 0 && response === null && (\n        <DirectionsService\n          options={{\n            destination: fields.geoCords[0] + \",\" + fields.geoCords[1],\n            origin: miguels,\n            travelMode: \"DRIVING\",\n          }}\n          callback={directionsCallback}\n          // optional\n          onUnmount={(ds) => {\n            console.log(\"DirectionsService unmount: \", ds);\n            setIsSelected(false);\n          }}\n        />\n      )}\n      {response !== null && (\n        <DirectionsRenderer options={{ directions: response }} />\n      )}\n    </div>\n  );\n};\n","export { Directions as default } from \"./Directions.js\";\n"]}